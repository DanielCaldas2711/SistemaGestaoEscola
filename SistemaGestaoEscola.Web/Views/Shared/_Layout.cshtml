@using SistemaGestaoEscola.Web.Data.Entities
@using SistemaGestaoEscola.Web.Helpers.Interfaces
@inject IUserHelper UserHelper

<!DOCTYPE html>
<html lang="pt">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ETEMB</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SistemaGestaoEscola.Web.styles.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        .nav-item.dropdown:hover .dropdown-menu {
            display: block;
        }

        .dropdown-menu a:hover {
            background-color: #f8f9fa;
        }

        .alert-float-button {
            position: fixed;
            bottom: 1.5rem;
            right: 1.5rem;
            z-index: 1055;
        }

        #toast-container {
            position: fixed;
            bottom: 1rem;
            right: 1rem;
            z-index: 2000;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">ETEMB</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between" id="navbarSupportedContent">
                    <ul class="navbar-nav flex-grow-1">
                        @if (!User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Index">Início</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Courses">Nossos Cursos</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Home" asp-action="Classes">Nossas Turmas</a></li>
                        }
                        else
                        {
                            <li class="nav-item dropdown d-flex align-items-center">
                                <a class="nav-link dropdown-toggle text-dark ms-1" href="#" id="menuDropdown" role="button" data-bs-toggle="dropdown">Menu</a>
                                <ul class="dropdown-menu" aria-labelledby="menuDropdown">
                                    <li><a class="dropdown-item" asp-controller="Home" asp-action="Index">Início</a></li>
                                    <li><a class="dropdown-item" asp-controller="Home" asp-action="Courses">Nossos Cursos</a></li>
                                    <li><a class="dropdown-item" asp-controller="Home" asp-action="Classes">Nossas Turmas</a></li>
                                </ul>
                            </li>
                        }

                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Users" asp-action="Index">Usuários</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Subjects" asp-action="Index">Disciplinas</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Courses" asp-action="Index">Cursos</a></li>
                        }

                        @if (User.Identity.IsAuthenticated && User.IsInRole("Secretary"))
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="CourseDisciplines" asp-action="Index">Courses</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Classes" asp-action="Index">Classes</a></li>
                        }

                        @if (User.Identity.IsAuthenticated && User.IsInRole("Professor"))
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="StudentGrades" asp-action="Index">Turmas</a></li>
                        }

                        @if (User.Identity.IsAuthenticated && User.IsInRole("Student"))
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="StudentGrades" asp-action="MyGrades">Notas</a></li>
                        }
                    </ul>

                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            var alerts = await UserHelper.GetUnreadAlertsCountAsync(User);
                            <li class="nav-item me-2 position-relative">
                                <a class="nav-link text-dark position-relative" asp-controller="Alerts" asp-action="MyAlerts" title="Alertas não lidos">
                                    <i class="bi bi-bell-fill"></i>
                                    @if (alerts > 0)
                                    {
                                        <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                            @alerts
                                        </span>
                                    }
                                </a>
                            </li>
                        }
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item d-flex align-items-center me-2">
                                @await Component.InvokeAsync("UserSummary")
                            </li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Account" asp-action="ChangePassword">Mudar Passe</a></li>
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Account" asp-action="EditProfile">Editar Perfil</a></li>
                            <li class="nav-item"><a href="#" class="nav-link text-dark" onclick="confirmLogout(event)">Logout</a></li>
                        }
                        else
                        {
                            <li class="nav-item"><a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a></li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; @DateTime.Now.Year - SistemaGestaoEscola.Web - <a asp-controller="Home" asp-action="Privacy">Privacidade</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        function confirmLogout(event) {
            event.preventDefault();
            showConfirmPopup({
                title: 'Terminar sessão',
                message: 'Queres terminar a sessão?',
                onConfirm: () => {
                    window.location.href = '@Url.Action("Logout", "Account")';
                }
            });
        }

        function loadAlertForm() {
            $('#alertModalContent').html('<div class="modal-body text-center"><div class="spinner-border"></div></div>');
            $.get('/Alerts/CreateFromPopup', function (data) {
                $('#alertModalContent').html(data);
            });
        }

        function showToast(type, message) {
            const toastType = type === 'success' ? 'bg-success text-white' : 'bg-danger text-white';
            const toastHtml = `
                <div class="toast align-items-center ${toastType} border-0" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fechar"></button>
                    </div>
                </div>
            `;

            const toastContainer = $('#toast-container');
            if (!toastContainer.length) {
                $('body').append('<div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3"></div>');
            }

            $('#toast-container').append(toastHtml);
            const toastElement = $('#toast-container .toast').last();
            const toast = new bootstrap.Toast(toastElement[0]);
            toast.show();
            toastElement.on('hidden.bs.toast', function () { $(this).remove(); });
        }

        $(document).on('submit', '#alertForm', function (e) {
            e.preventDefault();
            const data = {
                Title: $('#alertTitle').val(),
                Description: $('#alertDescription').val(),
                ReceiverId: $('#alertReceiver').val()
            };

            $.ajax({
                url: '/Alerts/CreateFromPopup',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (res) {
                    showToast('success', res.message || "Alerta enviado com sucesso.");
                    $('#alertForm')[0].reset();
                    setTimeout(() => $('#alertModal').modal('hide'), 1000);
                },
                error: function (xhr) {
                    let msg = "Erro ao enviar o alerta.";
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        msg = xhr.responseJSON.message;
                    }
                    showToast('error', msg);
                }
            });
        });
    </script>

    @await Html.PartialAsync("_Toast")
    @await Html.PartialAsync("_ConfirmPopup")

    @if (User.Identity.IsAuthenticated && User.IsInRole("Secretary"))
    {
        <button type="button" class="btn btn-warning alert-float-button shadow"
                onclick="loadAlertForm()" data-bs-toggle="modal" data-bs-target="#alertModal"
                title="Enviar alerta">
            <i class="bi bi-exclamation-circle"></i>
        </button>

        <div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content" id="alertModalContent">
                </div>
            </div>
        </div>
    }
</body>
</html>
