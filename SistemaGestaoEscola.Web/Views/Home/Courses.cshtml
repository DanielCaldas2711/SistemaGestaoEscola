@model PaginatedListViewModel<PublicCourseViewModel>

@{
    ViewData["Title"] = "Cursos";
}

<h2 class="mb-4">Nossos Cursos</h2>

@if (!Model.Items.Any())
{
    <div class="alert alert-warning">Nenhum curso disponível.</div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var course in Model.Items)
        {
            var topSubjects = course.Subjects.Take(4).ToList();
            var remainingCount = course.Subjects.Count - topSubjects.Count;

            <div class="col">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@course.CourseName</h5>
                        <p class="card-text">
                            <strong>Tipo:</strong> @course.CourseType <br />
                            <strong>Duração:</strong> @course.Duration horas
                        </p>
                        <h6>Disciplinas:</h6>
                        <ul class="list-unstyled mb-0">
                            @foreach (var subject in topSubjects)
                            {
                                <li>• @subject.SubjectName (@subject.Hours horas)</li>
                            }
                            @if (remainingCount > 0)
                            {
                                <li class="text-muted">+ @remainingCount outras</li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        }
    </div>
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Courses" asp-route-page="@(Model.PageIndex - 1)">Anterior</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Courses" asp-route-page="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Courses" asp-route-page="@(Model.PageIndex + 1)">Próxima</a>
                </li>
            }
        </ul>
    </nav>
}
